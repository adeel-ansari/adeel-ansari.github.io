[{"/Users/adeelansari/Documents/adeel-ansari.github.io/src/index.js":"1","/Users/adeelansari/Documents/adeel-ansari.github.io/src/reportWebVitals.js":"2","/Users/adeelansari/Documents/adeel-ansari.github.io/src/App.js":"3","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Home/Home.js":"4","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Navigation/NavigationBar.js":"5","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Tabview/Tabview.js":"6","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Tabview/StrategyGridView.js":"7","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Layout/Layout.js":"8","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Ontology/OntologyHome.js":"9","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/StrategyGraphView/StrategyGraph.js":"10"},{"size":500,"mtime":1610294453338,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610294453337,"results":"13","hashOfConfig":"12"},{"size":1065,"mtime":1610844480932,"results":"14","hashOfConfig":"12"},{"size":2031,"mtime":1611459951307,"results":"15","hashOfConfig":"12"},{"size":1943,"mtime":1610757347409,"results":"16","hashOfConfig":"12"},{"size":2272,"mtime":1612482421838,"results":"17","hashOfConfig":"12"},{"size":2758,"mtime":1612486201985,"results":"18","hashOfConfig":"12"},{"size":242,"mtime":1610742673589,"results":"19","hashOfConfig":"12"},{"size":1559,"mtime":1610831189811,"results":"20","hashOfConfig":"12"},{"size":13436,"mtime":1612634652513,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"181ppdw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adeelansari/Documents/adeel-ansari.github.io/src/index.js",[],["49","50"],"/Users/adeelansari/Documents/adeel-ansari.github.io/src/reportWebVitals.js",[],"/Users/adeelansari/Documents/adeel-ansari.github.io/src/App.js",["51","52","53","54","55","56"],"// App.js\nimport React, { useEffect, useState, Component } from 'react';\nimport './App.css';\nimport NavigationBar from './components/Navigation/NavigationBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Tabview from './components/Tabview/Tabview';\nimport OntologyHome from './components/Ontology/OntologyHome';\nimport Home from './components/Home/Home';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Layout } from './components/Layout/Layout';\n\nfunction App() {\n\n  const [data] = useState([]);\n\n  return (\n    <BrowserRouter>\n      <header>\n        <NavigationBar />\n      </header>\n      <br>\n      </br>\n      <React.Fragment>\n        <Layout>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/ontologies' component={OntologyHome} />\n            <Route path='/ontologyDetail' component={Tabview} />\n          </Switch>\n        </Layout>\n      </React.Fragment>\n      <br />\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Home/Home.js",["57","58","59"],"import React from 'react';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\n\nconst Home = () => {\n\n    return (\n        <div>\n            <Jumbotron>\n                <h1>Adeel Ansari</h1>\n                <home-p>\n                    Welcome to my page where I explore using knowledge graphs to improve organizational performance.\n                </home-p>\n                <br />\n                <br />\n                <home-p>\n                    <Button as={Link} to=\"/ontologies\" variant=\"primary\">Explore Ontologies</Button>\n                </home-p>\n            </Jumbotron>\n            <br >\n            </br>\n            {/* <Container>\n                <Row>\n                    <Col>\n                        <h2>\n                            Opportunity\n                        </h2>\n                        <p>\n                            Model business frameworks using OWL/RDF and demostrate how storing, sharing, and analyzing\n                            this type of data can help solve important business challenges.\n                        </p>\n                    </Col>\n                    <Col>\n                        <h2>\n                            Solution\n                        </h2>\n                        <p>\n                            You can contact me through LinkedIn or email.\n                        </p>\n                    </Col>\n                    <Col>\n                        <h2>\n                            About Me\n                        </h2>\n                        <p>\n                            I hold a Bachelors of Computer Science and an MBA.  My work experience primarily includes\n                            data engineering and product management.  You can contact me through LinkedIn or by email.\n                        </p>\n                    </Col>\n                </Row>\n            </Container> */}\n        </div>\n    );\n};\n\nexport default Home;","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Navigation/NavigationBar.js",["60","61"],"import React from 'react';\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\n\nconst NavigationBar = () => {\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            {/* <Navbar.Brand href=\"#home\">adeelansari.io</Navbar.Brand> */}\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Item as=\"li\">\n                        <Nav.Link as={Link} to='/'>Home</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\">\n                        <Nav.Link as={Link} to='/ontologies'>Ontologies</Nav.Link>\n                    </Nav.Item>\n                    {/* <Nav.Link href=\"#about\">About</Nav.Link> */}\n                    {/* <Nav.Link href=\"#ontologies\">Ontologies</Nav.Link> */}\n                    {/* <Nav.Link href=\"#demo\">Demo</Nav.Link> */}\n                    {/* <NavDropdown title=\"Ontologies\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#ontology/strategicchoicecascade\">Strategic Choice Cascade</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#ontology/businessmodel\">Business Model</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#ontology/anotherontology\">Another Ontology</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#ontology/anotherlink\">Separated link</NavDropdown.Item>\n                    </NavDropdown> */}\n                </Nav>\n                {/* <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"primary\">Search</Button>\n                </Form> */}\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default NavigationBar;\n","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Tabview/Tabview.js",["62","63"],"import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport StrategyGraph from '../StrategyGraphView/StrategyGraph';\nimport StrategyGridView from './StrategyGridView';\nimport { Tabs, Tab, Container, Spinner } from 'react-bootstrap';\n\n\nconst Tabview = (props) => {\n\n    const [graph, setGraph] = useState({});\n    const [showResult, setShowResult] = useState(false);\n\n    const getGraphData = async () => {\n        try {\n            const response = await fetch('https://adeeltestfunctionapp.azurewebsites.net/api/GetGraphStructure?clientId=apim-AdeelTestFunctionApp-apim2', {\n                method: 'GET'\n            });\n            const graphData = await response.json();            \n            const updatedGraphData = { ...graphData }\n            console.log(updatedGraphData)\n            setGraph(updatedGraphData)\n            setShowResult(true);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    useEffect(() => {\n        if (!props.fetched) {\n            getGraphData();\n        }\n    }, []); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\n\n    return (\n        //<Container>\n        <div>\n            { showResult ? (\n                <Tabs defaultActiveKey=\"graphview\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"gridview\" title=\"Grid View\">\n                        <br />\n                        <StrategyGridView />\n                    </Tab>\n                    <Tab eventKey=\"graphview\" title=\"Graph View\">\n                        <br />\n                        <StrategyGraph graph={graph} />\n                    </Tab>\n                    <Tab eventKey=\"example\" title=\"Example\">\n                        <br />\n                        This tab will contain an example for the ontology.\n                    </Tab>\n                </Tabs>\n            ): (\n                <div>\n                    <br />\n                    <Spinner animation=\"border\" variant=\"success\" />\n                    <h2>Loading</h2>\n                </div>\n            )}\n        </div>\n        //</Container>\n    );\n};\n\nexport default Tabview;","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Tabview/StrategyGridView.js",["64"],"import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { Table, Container } from 'react-bootstrap';\nimport './StrategyGridView.css';\n\n\n\nconst StrategyGridView = (props) => {\n    const [ontologyData, setOntologyData] = useState({\n        //ontolology_dict: {},\n    });\n\n    const getOntologyData = async () => {\n        try {\n            const response = await fetch('https://adeeltestfunctionapp.azurewebsites.net/api/GetOntologyDetail?clientId=apim-AdeelTestFunctionApp-apim2', {\n                method: 'GET'\n            });\n            const ontologyData = await response.json();            \n            const updatedOntologyData = { ...ontologyData }\n            console.log(updatedOntologyData)\n            setOntologyData(updatedOntologyData)\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    useEffect(() => {\n        if (!props.fetched) {\n            getOntologyData();\n        }\n    }, []); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\n\n    return (\n        Object.keys(ontologyData).map((key, index) => {\n            return (\n                <Container key={key}>\n                    <h3>\n                        {key}\n                    </h3>\n                    {ontologyData[key]['Description'].map((class_desc) => {\n                        return (\n                            <p>\n                                {class_desc['Class Description']}\n                            </p>\n                        )})}\n                    <Table striped bordered hover responsive>\n                        <thead>\n                            <tr>\n                                <th>Attribute Name</th>\n                                <th>Attribute Type</th>\n                                <th>Attribute Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                ontologyData[key]['Properties'].map((class_attr) => {\n                                    return (\n                                        <tr>\n                                            <td>{class_attr['Property']}</td>\n                                            <td>{class_attr['Property Type']}</td>\n                                            <td>{class_attr['Property Description']}</td>\n                                        </tr>)\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                    <br />\n                </Container>\n            )\n        })\n    );\n};\n\nexport default StrategyGridView;","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Layout/Layout.js",[],"/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Ontology/OntologyHome.js",["65","66"],"import React from 'react';\nimport { Card, Button, Row } from 'react-bootstrap';\nimport Layout from '../Layout/Layout';\nimport Iframe from 'react-iframe'\nimport { Link } from 'react-router-dom';\n\nconst OntologyHome = () => {\n\n    return (\n        <Row className=\"justify-content-center\">\n            <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>Strategy</Card.Title>\n                    <Card.Text>\n                        This ontology is based on the book, 'Playing to Win' by A.G. Lafley and Roger L. Martin.\n                        It provides some of the foundational components that can be used to link an organizations\n                        activities.\n                    </Card.Text>\n                    <Button\n                        as={Link}\n                        to=\"/ontologyDetail\"\n                        variant=\"primary\"\n                    >\n                        Enter\n                    </Button>\n                </Card.Body>\n                {/* <Card.Footer className=\"text-muted\">\n                    <Iframe url=\"https://read.amazon.ca/kp/card?asin=B00AJVJ1HI&preview=inline&linkCode=kpe&ref_=cm_sw_r_kb_dp_aW5.FbG44G6SR\"\n                        width=\"336px\"\n                        height=\"550px\"\n                        id=\"myId\"\n                        className=\"myClassname\"\n                        display=\"initial\"\n                        position=\"relative\" />\n                </Card.Footer> */}\n            </Card>\n        </Row>\n    );\n};\n\nexport default OntologyHome;","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/StrategyGraphView/StrategyGraph.js",["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":17,"nodeType":"75","messageId":"76","endLine":2,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":2,"column":38,"nodeType":"75","messageId":"76","endLine":2,"endColumn":47},{"ruleId":"73","severity":1,"message":"78","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":19},{"ruleId":"73","severity":1,"message":"79","line":6,"column":21,"nodeType":"75","messageId":"76","endLine":6,"endColumn":24},{"ruleId":"73","severity":1,"message":"80","line":6,"column":26,"nodeType":"75","messageId":"76","endLine":6,"endColumn":29},{"ruleId":"73","severity":1,"message":"81","line":15,"column":10,"nodeType":"75","messageId":"76","endLine":15,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":2,"column":21,"nodeType":"75","messageId":"76","endLine":2,"endColumn":30},{"ruleId":"73","severity":1,"message":"79","line":2,"column":32,"nodeType":"75","messageId":"76","endLine":2,"endColumn":35},{"ruleId":"73","severity":1,"message":"80","line":2,"column":37,"nodeType":"75","messageId":"76","endLine":2,"endColumn":40},{"ruleId":"73","severity":1,"message":"82","line":2,"column":23,"nodeType":"75","messageId":"76","endLine":2,"endColumn":34},{"ruleId":"73","severity":1,"message":"83","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":6,"column":21,"nodeType":"75","messageId":"76","endLine":6,"endColumn":30},{"ruleId":"84","severity":1,"message":"85","line":33,"column":8,"nodeType":"86","endLine":33,"endColumn":10,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"85","line":31,"column":8,"nodeType":"86","endLine":31,"endColumn":10,"suggestions":"88"},{"ruleId":"73","severity":1,"message":"89","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"90","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":14},{"ruleId":"73","severity":1,"message":"91","line":3,"column":17,"nodeType":"75","messageId":"76","endLine":3,"endColumn":25},{"ruleId":"84","severity":1,"message":"92","line":206,"column":8,"nodeType":"86","endLine":206,"endColumn":10,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'data' is assigned a value but never used.","'NavDropdown' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.fetched'. Either include it or remove the dependency array.","ArrayExpression",["96"],["97"],"'Layout' is defined but never used.","'Iframe' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"99","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [props.fetched]",{"range":"104","text":"105"},{"range":"106","text":"105"},"Update the dependencies array to be: [draw]",{"range":"107","text":"108"},[1092,1094],"[props.fetched]",[951,953],[6551,6553],"[draw]"]