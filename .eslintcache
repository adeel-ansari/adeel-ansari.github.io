[{"/Users/adeelansari/Documents/adeel-ansari.github.io/src/index.js":"1","/Users/adeelansari/Documents/adeel-ansari.github.io/src/reportWebVitals.js":"2","/Users/adeelansari/Documents/adeel-ansari.github.io/src/App.js":"3","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Home/Home.js":"4","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Navigation/NavigationBar.js":"5","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Tabview/Tabview.js":"6","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Tabview/StrategyGridView.js":"7","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/TestGraph/ForceGraph3.js":"8"},{"size":500,"mtime":1610294453338,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610294453337,"results":"11","hashOfConfig":"10"},{"size":1421,"mtime":1610294453347,"results":"12","hashOfConfig":"10"},{"size":518,"mtime":1610294453340,"results":"13","hashOfConfig":"10"},{"size":1471,"mtime":1610294453341,"results":"14","hashOfConfig":"10"},{"size":1534,"mtime":1610294453342,"results":"15","hashOfConfig":"10"},{"size":1013,"mtime":1610294453341,"results":"16","hashOfConfig":"10"},{"size":3121,"mtime":1610294453345,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1nknaxi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/adeelansari/Documents/adeel-ansari.github.io/src/index.js",[],["38","39"],"/Users/adeelansari/Documents/adeel-ansari.github.io/src/reportWebVitals.js",[],"/Users/adeelansari/Documents/adeel-ansari.github.io/src/App.js",["40","41","42","43","44","45"],"// App.js\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport NavigationBar from './components/Navigation/NavigationBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Tabview from './components/Tabview/Tabview';\nimport Home from './components/Home/Home';\n\n// const graph = ({\n//   nodes: Array.from({ length: 13 }, () => ({})),\n//   links: [\n//       { source: 0, target: 1 },\n//       { source: 1, target: 2 },\n//       { source: 2, target: 0 },\n//       { source: 1, target: 3 },\n//       { source: 3, target: 2 },\n//       { source: 3, target: 4 },\n//       { source: 4, target: 5 },\n//       { source: 5, target: 6 },\n//       { source: 5, target: 7 },\n//       { source: 6, target: 7 },\n//       { source: 6, target: 8 },\n//       { source: 7, target: 8 },\n//       { source: 9, target: 4 },\n//       { source: 9, target: 11 },\n//       { source: 9, target: 10 },\n//       { source: 10, target: 11 },\n//       { source: 11, target: 12 },\n//       { source: 12, target: 10 }\n//   ]\n// });\n\n\n\nfunction App() {\n\n  const [data] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <NavigationBar />\n      </header>\n      <br />\n      <Home />\n      {/* <h1 align=\"center\">Strategic Choice Cascade</h1> */}\n      {/* <Container>\n        <Tabview />\n      </Container> */}\n    </div>\n  );\n}\n\nexport default App;","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Home/Home.js",[],"/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Navigation/NavigationBar.js",["46","47","48","49"],"import React from 'react';\nimport { Nav, Navbar, NavDropdown, Form, FormControl } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\nconst NavigationBar = () => {\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            {/* <Navbar.Brand href=\"#home\">adeelansari.io</Navbar.Brand> */}\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    {/* <NavDropdown title=\"Ontologies\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#ontology/strategicchoicecascade\">Strategic Choice Cascade</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#ontology/businessmodel\">Business Model</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#ontology/anotherontology\">Another Ontology</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#ontology/anotherlink\">Separated link</NavDropdown.Item>\n                    </NavDropdown> */}\n                </Nav>\n                {/* <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"primary\">Search</Button>\n                </Form> */}\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default NavigationBar;","/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Tabview/Tabview.js",[],"/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/Tabview/StrategyGridView.js",[],"/Users/adeelansari/Documents/adeel-ansari.github.io/src/components/TestGraph/ForceGraph3.js",["50"],"// ForceGraph.js\nimport * as d3 from 'd3';\nimport React, { useRef, useEffect } from 'react';\nimport './ForceGraph.css'\n\nfunction clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n};\n\nfunction ForceGraph3({ width, height, graph }) {\n    const ref = useRef();\n\n    useEffect(() => {\n        draw();\n    }, [graph]);\n\n    \n    const draw = () => {\n\n        // define objects\n        // not defined in the functions because otherwise it will\n        // append a new link/node each time it moves\n        const svg = d3.select(ref.current)\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .style(\"border\", \"1px solid black\");\n\n        const node = svg.append(\"g\")\n            .selectAll(\"g\")\n            .data(graph.nodes)\n            .join(\"g\")\n            .classed(\"node\", true);\n\n        // Add one circle in each group\n        node.append(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", 8);\n\n        node.append(\"text\")\n            .attr(\"x\", 6)\n            .attr(\"y\", \"0.31em\")\n            .text(d => d.name)\n\n        const link = svg.append(\"g\")\n            .attr(\"stroke\", \"#999\")\n            .attr(\"stroke-opacity\", 0.6)\n            .selectAll(\"line\")\n            .data(graph.links)\n            .join(\"line\")\n            //.attr(\"stroke-width\", d => Math.sqrt(d.value)\n            .attr(\"stroke-width\", 1);\n\n        const simulation = d3\n            .forceSimulation()\n            .nodes(graph.nodes)\n            .force(\"charge\", d3.forceManyBody())\n            .force(\"center\", d3.forceCenter(width / 2, height / 2))\n            .force(\"link\", d3.forceLink().links(graph.links).id(d=>d.name))\n            .on(\"tick\", tick);\n\n            \n        function updateLinks() {\n\n            link\n                .attr(\"x1\", d => d.source.x)\n                .attr(\"y1\", d => d.source.y)\n                .attr(\"x2\", d => d.target.x)\n                .attr(\"y2\", d => d.target.y)\n                .exit().remove()\n        }\n\n        function updateNodes() {\n\n            node\n                .attr(\"transform\", d => `translate(${d.x},${d.y})`);\n        }\n\n        const drag = d3\n            .drag()\n            .on(\"start\", dragstart)\n            .on(\"drag\", dragged);\n\n        node.call(drag).on(\"click\", click);\n\n        function tick() {\n            updateLinks()\n            updateNodes()\n        }\n\n        function click(event, d) {\n            delete d.fx;\n            delete d.fy;\n            d3.select(this).classed(\"fixed\", false);\n            simulation.alpha(1).restart();\n        }\n\n        function dragstart() {\n            d3.select(this).classed(\"fixed\", true);\n        }\n\n        function dragged(event, d) {\n            d.fx = clamp(event.x, 0, width);\n            d.fy = clamp(event.y, 0, height);\n            simulation.alpha(1).restart();\n        }\n\n\n    };\n\n    return (\n        <div className=\"graph\">\n            <svg ref={ref}>\n                {/* <g className=\"tooltip-area\">\n                    <text className=\"tooltip-area__text\"></text>\n                </g> */}\n            </svg>\n        </div>\n    );\n};\n\nexport default ForceGraph3;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":26},{"ruleId":"55","severity":1,"message":"59","line":6,"column":10,"nodeType":"57","messageId":"58","endLine":6,"endColumn":19},{"ruleId":"55","severity":1,"message":"60","line":6,"column":21,"nodeType":"57","messageId":"58","endLine":6,"endColumn":24},{"ruleId":"55","severity":1,"message":"61","line":6,"column":26,"nodeType":"57","messageId":"58","endLine":6,"endColumn":29},{"ruleId":"55","severity":1,"message":"62","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":15},{"ruleId":"55","severity":1,"message":"63","line":38,"column":10,"nodeType":"57","messageId":"58","endLine":38,"endColumn":14},{"ruleId":"55","severity":1,"message":"64","line":2,"column":23,"nodeType":"57","messageId":"58","endLine":2,"endColumn":34},{"ruleId":"55","severity":1,"message":"65","line":2,"column":36,"nodeType":"57","messageId":"58","endLine":2,"endColumn":40},{"ruleId":"55","severity":1,"message":"66","line":2,"column":42,"nodeType":"57","messageId":"58","endLine":2,"endColumn":53},{"ruleId":"55","severity":1,"message":"67","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"69","line":15,"column":8,"nodeType":"70","endLine":15,"endColumn":15,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tabview' is defined but never used.","'data' is assigned a value but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [draw, graph]",{"range":"77","text":"78"},[315,322],"[draw, graph]"]